apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-neo4j
  labels:
    app: echo
    component: neo4j
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
      component: neo4j
  template:
    metadata:
      labels:
        app: echo
        component: neo4j
    spec:
      containers:
        - name: neo4j
          image: "{{ .Values.neo4j.image.repository }}:{{ .Values.neo4j.image.tag | default "5.18.0-community" }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7474
              name: http
            - containerPort: 7687
              name: bolt
          env:
            - name: NEO4J_AUTH
              value: "neo4j/{{ .Values.neo4j.password }}"
            - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
              value: "yes"
            - name: NEO4J_server_logs_console_enabled
              value: "true"
            - name: NEO4J_server_memory_pagecache_size
              value: "{{ .Values.neo4j.config.pagecacheSize | default "512M" }}"
            - name: NEO4J_server_memory_heap_initial__size
              value: "{{ .Values.neo4j.config.heapSize | default "512M" }}"
            - name: NEO4J_server_memory_heap_max__size
              value: "{{ .Values.neo4j.config.heapSize | default "512M" }}"
          volumeMounts:
            - name: neo4j-data
              mountPath: /data
          resources:
            requests:
              cpu: "{{ .Values.neo4j.resources.requests.cpu | default "500m" }}"
              memory: "{{ .Values.neo4j.resources.requests.memory | default "1Gi" }}"
            limits:
              cpu: "{{ .Values.neo4j.resources.limits.cpu | default "1000m" }}"
              memory: "{{ .Values.neo4j.resources.limits.memory | default "2Gi" }}"
          readinessProbe:
            tcpSocket:
              port: 7687
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 7687
            initialDelaySeconds: 60
            periodSeconds: 10
      volumes:
        - name: neo4j-data
          persistentVolumeClaim:
            claimName: neo4j-data 