apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-api
  labels:
    app: echo
    component: api
spec:
  replicas: {{ .Values.apiServer.replicaCount }}
  selector:
    matchLabels:
      app: echo
      component: api
  template:
    metadata:
      labels:
        app: echo
        component: api
    spec:
      imagePullSecrets:
        - name: do-registry-secret
      containers:
        - name: api-server
          image: {{ printf "%s/%s:%s" .Values.global.registry .Values.apiServer.image.repository .Values.global.imageTag | quote }}
          imagePullPolicy: Always
          command:
            - '/bin/sh'
            - '/code/server/prod.sh'
          ports:
            - containerPort: {{ .Values.apiServer.service.port }}
          env:
            - name: DIRECTUS_PUBLIC_URL
              value: "{{ .Values.apiServer.env.DIRECTUS_PUBLIC_URL }}"

            - name: DIRECTUS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: echo-backend-secrets
                  key: DIRECTUS_ADMIN_TOKEN

            - name: DIRECTUS_SECRET
              valueFrom:
                secretKeyRef:
                  name: echo-backend-secrets
                  key: DIRECTUS_SECRET

            - name: DIRECTUS_SESSION_COOKIE_NAME
              value: "{{ .Values.directus.env.SESSION_COOKIE_NAME }}"

            - name: ADMIN_BASE_URL
              value: "{{ .Values.apiServer.env.ADMIN_BASE_URL }}"

            - name: PARTICIPANT_BASE_URL
              value: "{{ .Values.apiServer.env.PARTICIPANT_BASE_URL }}"

            - name: BUILD_VERSION
              value: "{{ .Values.apiServer.env.BUILD_VERSION }}"

            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: echo-backend-secrets
                  key: OPENAI_API_KEY

            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: echo-backend-secrets
                  key: ANTHROPIC_API_KEY

            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: echo-backend-secrets
                  key: REDIS_URL

            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: echo-backend-secrets
                  key: DATABASE_URL

            - name: DISABLE_REDACTION
              value: "{{ .Values.apiServer.env.DISABLE_REDACTION }}"

            - name: DISABLE_SENTRY
              value: "{{ .Values.apiServer.env.DISABLE_SENTRY }}"

            - name: SERVE_API_DOCS
              value: "{{ .Values.apiServer.env.SERVE_API_DOCS }}"

            - name: STORAGE_S3_REGION
              value: "{{ .Values.apiServer.env.STORAGE_S3_REGION }}"

            - name: STORAGE_S3_ENDPOINT
              value: "{{ .Values.apiServer.env.STORAGE_S3_ENDPOINT }}"
            
            - name: STORAGE_S3_BUCKET
              value: "{{ .Values.apiServer.env.STORAGE_S3_BUCKET }}"
            
            - name: STORAGE_S3_KEY
              valueFrom:
                secretKeyRef:
                  name: echo-backend-secrets
                  key: S3_ACCESS_KEY

            - name: STORAGE_S3_SECRET
              valueFrom:
                secretKeyRef:
                  name: echo-backend-secrets
                  key: S3_SECRET_KEY
                  
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
