apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
        - name: init-config
          image: busybox:1.35
          command: ['sh', '-c', 'mkdir -p /etc/loki /data/chunks /data/rules && chmod -R 755 /etc/loki /data && chown -R 10001:10001 /etc/loki /data']
          volumeMounts:
            - name: config-dir
              mountPath: /etc/loki
            - name: loki-storage
              mountPath: /data
      containers:
        - name: loki
          image: grafana/loki:2.9.2
          args:
            - "-config.file=/etc/loki/config.yaml"
          ports:
            - containerPort: 3100
          volumeMounts:
            - name: config-dir
              mountPath: /etc/loki
            - name: loki-config
              mountPath: /etc/loki/config.yaml
              subPath: loki.yaml
            - name: loki-storage
              mountPath: /data
          resources:
            requests:
              cpu: {{ .Values.loki.resources.requests.cpu | quote }}
              memory: {{ .Values.loki.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.loki.resources.limits.cpu | quote }}
              memory: {{ .Values.loki.resources.limits.memory | quote }}
      volumes:
        - name: config-dir
          emptyDir: {}
        - name: loki-config
          configMap:
            name: loki-config
        - name: loki-storage
          persistentVolumeClaim:
            claimName: loki-data 